# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# ===== AI SONIC PROJECT SPECIFIC RULES =====

# Model files (large trained models)
models/*.zip
models/*.pth
models/*.h5
models/*.ckpt
models/*.pb
models/*.onnx
models/*.tflite
models/*.pt
models/*.pkl
models/*.joblib
models/*.safetensors

# Keep model directories but ignore contents
models/*/
!models/*/.gitkeep

# Training logs and TensorBoard files
logs/
*.log
tensorboard_logs/
wandb/
mlruns/

# Generated results and outputs
play_results/
results/
outputs/
episodes/
recordings/
videos/
*.mp4
*.avi
*.mov
*.gif

# ROM files (copyrighted content)
roms/*.md
roms/*.smc
roms/*.sfc
roms/*.nes
roms/*.gb
roms/*.gba
roms/*.nds
roms/*.iso
roms/*.bin
roms/*.zip
roms/*.7z
roms/*.rar

# Keep ROM directory structure
!roms/.gitkeep

# Emulator save states and memory dumps
*.sav
*.srm
*.state
*.mem
*.ram

# System and personal files
DxDiag.txt
*.dmp
*.crash
*.tmp
*.temp
Thumbs.db
.DS_Store
desktop.ini

# Configuration files with sensitive data
configs/*.env
configs/secrets.yaml
configs/private.yaml
*.key
*.pem
*.p12

# Data files (large datasets)
data/raw/
data/processed/
data/external/
*.csv
*.json
*.parquet
*.hdf5
*.h5
*.npz
*.npy

# Keep data directory structure
!data/.gitkeep
!data/README.md

# Temporary and cache files
temp/
tmp/
cache/
.cache/
*.swp
*.swo
*~

# IDE and editor files
.vscode/
.idea/
*.sublime-*
.atom/
.brackets.json

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows specific
*.lnk
*.exe
*.msi
*.dll
*.sys

# Backup files
*.bak
*.backup
*.old
*.orig

# Large media files
*.wav
*.mp3
*.flac
*.aac
*.mkv
*.webm

# Documentation builds
docs/_build/
docs/build/
site/

# Jupyter notebook outputs
*.ipynb

# Keep example notebooks but ignore outputs
!examples/*.ipynb

# Test outputs
test_outputs/
test_results/
coverage/
.coverage
htmlcov/

# Performance profiling
*.prof
*.profile
*.trace

# Memory dumps
*.dmp
*.hprof
*.heap

# Lock files (keep poetry.lock if using poetry)
# poetry.lock
# Pipfile.lock
# yarn.lock
# package-lock.json

# Local development files
local_config.py
local_settings.py
.env.local
.env.development
.env.test
.env.production
